# Configuration de l'environnement Gitpod pour le développement Android

tasks:
  - name: Setup Android SDK
    init: |
      # Télécharge les outils de ligne de commande Android
      echo "Téléchargement des outils Android..."
      wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
      unzip -q commandlinetools.zip -d ./android-sdk
      rm commandlinetools.zip

      # Crée la structure de dossiers attendue par le SDK Manager
      mkdir -p ./android-sdk/cmdline-tools/latest
      mv ./android-sdk/cmdline-tools/* ./android-sdk/cmdline-tools/latest/

      # Configure les variables d'environnement
      export ANDROID_HOME=$PWD/android-sdk
      export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      echo 'export ANDROID_HOME=$PWD/android-sdk' >> ~/.bashrc
      echo 'export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools' >> ~/.bashrc

      # Accepte automatiquement les licences Android (très important !)
      echo "Acceptation des licences..."
      yes | sdkmanager --licenses >/dev/null

      # Installe les paquets nécessaires (plateforme et outils de build)
      echo "Installation des paquets SDK..."
      sdkmanager "platforms;android-33" "build-tools;33.0.1" "platform-tools" >/dev/null
      
      echo "Environnement Android prêt !"
      
  - name: Build & Serve
    command: |
      # Attendre que la configuration soit terminée
      gp sync-await setup-ready

      # Donner les permissions d'exécution au script Gradle
      chmod +x ./gradlew
      
      # Compiler l'application pour la première fois
      echo "Compilation de l'APK de débogage..."
      ./gradlew assembleDebug
      
      echo "Compilation terminée ! L'APK se trouve dans app/build/outputs/apk/debug/"

# Exposer les ports si nécessaire (pas pour ce projet, mais utile à savoir)
# ports:
#   - port: 8080
#     onOpen: open-preview